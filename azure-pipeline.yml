trigger:
- none

variables:
  - group: azuredevops

pool:
  vmImage: ubuntu-latest

stages:
# - stage: deploy_aks
#   displayName: Deploy AKS cluster
#   jobs:
#   - job: terraform_aks_job
#     displayName: terraform AKS
#     steps:
#     - task: TerraformInstaller@1
#       displayName: terraform install
#       inputs:
#         terraformVersion: 'latest'
#     - task: TerraformTaskV4@4
#       displayName: terraform init
#       inputs:
#         provider: 'azurerm'
#         command: 'init'
#         workingDirectory: '$(System.DefaultWorkingDirectory)/src/iac_aks'
#         backendServiceArm: 'MVP'
#         backendAzureRmResourceGroupName: 'test'
#         backendAzureRmStorageAccountName: 'test'
#         backendAzureRmContainerName: 'test'
#         backendAzureRmKey: 'test'
#     - task: TerraformTaskV4@4
#       displayName: terraform apply
#       inputs:
#         provider: 'azurerm'
#         command: 'apply'
#         workingDirectory: '$(System.DefaultWorkingDirectory)/src/iac_aks'
#         environmentServiceNameAzureRM: 'MVP'

# - stage: deploy_azuredevops
#   displayName: Deploy service connection for Azure DevOps
#   jobs:
#   - job: deploy_serviceconnection
#     displayName: terraform service connection creation
#     steps:
#     - task: Bash@3
#       displayName: export env variables
#       inputs:
#         targetType: 'inline'
#         script: |          
#           export AZDO_PERSONAL_ACCESS_TOKEN=$(PAT)
#           export AZDO_ORG_SERVICE_URL=$(URL)


#     - task: TerraformInstaller@1
#       displayName: terraform install
#       inputs:
#         terraformVersion: 'latest'
#     - task: TerraformTaskV4@4
#       displayName: terraform init
#       inputs:
#         provider: 'azurerm'
#         command: 'init'
#         workingDirectory: '$(System.DefaultWorkingDirectory)/src/iac_devops'
#         backendServiceArm: 'MVP'
#         backendAzureRmResourceGroupName: 'test'
#         backendAzureRmStorageAccountName: 'test'
#         backendAzureRmContainerName: 'test'
#         backendAzureRmKey: 'test'
#     - task: TerraformTaskV4@4
#       displayName: terraform apply
#       inputs:
#         provider: 'azurerm'
#         command: 'apply'
#         workingDirectory: '$(System.DefaultWorkingDirectory)/src/iac_devops'
#         environmentServiceNameAzureRM: 'MVP'
     

- stage: deploy_application
  displayName: Deploy application on AKS Cluster
  jobs:
  - job: deploy_application
    displayName: deploy nginx on aks
    steps:
    - task: Kubernetes@1
      displayName: create a nginx deployment with kubectl commands
      inputs:
        connectionType: 'Kubernetes Service Connection'
        kubernetesServiceEndpoint: 'Example-AKS'
        namespace: 'default'
        command: 'apply'
        useConfigurationFile: true
        configurationType: 'inline'
        inline: '$(Build.SourcesDirectory)/code/nginx.yml'
        secretType: 'dockerRegistry'
        containerRegistryType: 'Azure Container Registry'
    # - task: Kubernetes@1
    #   displayName: create a nginx deployment with kubectl commands
    #   inputs:
    #     connectionType: 'Kubernetes Service Connection'
    #     kubernetesServiceEndpoint: 'Example-AKS'
    #     namespace: 'nginx'
    #     command: 'apply'
    #     useConfigurationFile: true
    #     configuration: '$(Build.SourcesDirectory)/code/nginx.yml'
    #     secretType: 'dockerRegistry'
    #     containerRegistryType: 'Azure Container Registry'
