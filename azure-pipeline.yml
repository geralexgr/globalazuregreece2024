trigger:
- none

variables:
  - group: azuredevops

pool:
  vmImage: ubuntu-latest

stages:
# - stage: deploy_aks
#   displayName: Deploy AKS cluster
#   jobs:
#   - job: terraform_aks_job
#     displayName: terraform AKS
#     steps:
#     - task: TerraformInstaller@1
#       displayName: terraform install
#       inputs:
#         terraformVersion: 'latest'
#     - task: TerraformTaskV4@4
#       displayName: terraform init
#       inputs:
#         provider: 'azurerm'
#         command: 'init'
#         workingDirectory: '$(System.DefaultWorkingDirectory)/src/iac_aks'
#         backendServiceArm: 'MVP'
#         backendAzureRmResourceGroupName: 'test'
#         backendAzureRmStorageAccountName: 'test'
#         backendAzureRmContainerName: 'test'
#         backendAzureRmKey: 'test'
#     - task: TerraformTaskV4@4
#       displayName: terraform apply
#       inputs:
#         provider: 'azurerm'
#         command: 'apply'
#         workingDirectory: '$(System.DefaultWorkingDirectory)/src/iac_aks'
#         environmentServiceNameAzureRM: 'MVP'

- stage: deploy_azuredevops
  displayName: Deploy service connection for Azure DevOps
  jobs:
  - job: deploy_serviceconnection
    displayName: terraform service connection creation
    steps:
    - task: Bash@3
      displayName: export env variables
      inputs:
        targetType: 'inline'
        script: |          
          export AZDO_PERSONAL_ACCESS_TOKEN=$(PAT)
          export AZDO_ORG_SERVICE_URL=$(URL)

    # - script: echo $(System.AccessToken) | az devops login
    #   displayName: 'Login to DevOps'
    - task: TerraformInstaller@1
      displayName: terraform install
      inputs:
        terraformVersion: 'latest'
    - task: TerraformTaskV4@4
      displayName: terraform init
      inputs:
        provider: 'azurerm'
        command: 'init'
        workingDirectory: '$(System.DefaultWorkingDirectory)/src/iac_devops'
        backendServiceArm: 'MVP'
        backendAzureRmResourceGroupName: 'test'
        backendAzureRmStorageAccountName: 'test'
        backendAzureRmContainerName: 'test'
        backendAzureRmKey: 'test'
    - task: TerraformTaskV4@4
      displayName: terraform apply
      inputs:
        provider: 'azurerm'
        command: 'apply'
        workingDirectory: '$(System.DefaultWorkingDirectory)/src/iac_devops'
        environmentServiceNameAzureRM: 'MVP'
     
